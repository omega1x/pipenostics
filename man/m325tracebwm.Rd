% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/m325tracebwm.R
\name{m325tracebwm}
\alias{m325tracebwm}
\title{Minenergo-325. Massively trace backwards thermal-hydraulic regime for
 partially measurable district heating network}
\usage{
m325tracebwm(
  sender = 6,
  acceptor = 7,
  temperature = 70,
  pressure = pipenostics::mpa_kgf(6),
  consumption = 20,
  d = 100,
  len = 72.446,
  year = 1986,
  insulation = 0,
  laying = "tunnel",
  beta = FALSE,
  exp5k = TRUE,
  roughness = 0.001,
  inlet = 0.5,
  outlet = 1,
  method = "romeo",
  opinion = "median",
  verbose = TRUE,
  csv = FALSE,
  file = "m325tracebw.csv"
)
}
\arguments{
\item{sender}{identifier of the node which heat carrier flows out.
Type: any type that can be painlessly coerced to character by
\code{\link{as.character}}.}

\item{acceptor}{identifier of the node which heat carrier flows in. According to topology
of test bench considered this identifier should be unique for every row.
Type: any type that can be painlessly coerced to character by
\code{\link{as.character}}.}

\item{temperature}{\emph{snapshot of thermal-hydraulic regime state}: temperature of heat carrier
(water) sensor-measured on the terminal acceptor node, [\emph{Â°C}].
Use \code{NA_float_}s for (terminal) nodes without temperature sensor.
Type: \code{\link{assert_double}}.}

\item{pressure}{\emph{snapshot of thermal-hydraulic regime state}: sensor-measured
\href{https://en.wikipedia.org/wiki/Pressure_measurement#Absolute}{absolute pressure}
of heat carrier (water) inside the pipe (i.e. acceptor's incoming edge),
[\emph{MPa}]. Type: \code{\link{assert_double}}.}

\item{consumption}{\emph{snapshot of thermal-hydraulic regime state}:
sensor-measured amount of heat carrier (water) on terminal node that is
transferred by pipe (i.e. acceptor's incoming edge) during a period,
[\emph{ton/hour}]. Type: \code{\link{assert_double}}.
Use \code{NA_float_}s for nodes without consumption sensor.}

\item{d}{internal diameter of pipe (i.e.diameter of acceptor's incoming edge),
[\emph{mm}].
Type: \code{\link{assert_double}}.}

\item{len}{pipe length (i.e. length of acceptor's incoming edge), [\emph{m}].
Type: \code{\link{assert_double}}.}

\item{year}{year when the pipe (i.e. acceptor's incoming edge) is put in operation
after laying or total overhaul.
Type: \code{\link{assert_integerish}}.}

\item{insulation}{identifier of insulation that covers the exterior of pipe (i.e. acceptor's
incoming edge):
 \describe{
   \item{\code{0}}{no insulation}
   \item{\code{1}}{foamed polyurethane or analogue}
   \item{\code{2}}{polymer concrete}
 }
Type: \code{\link{assert_subset}}.}

\item{laying}{type of pipe laying depicting the position of pipe in space. Only five
types of pipe laying are considered:
\itemize{
  \item \code{air},
  \item \code{channel},
  \item \code{room},
  \item \code{tunnel},
  \item \code{underground}.
}
Type: \code{\link{assert_subset}}.}

\item{beta}{logical indicator: should they consider additional heat losses of fittings
located on this pipe (i.e. acceptor's incoming edge)?
Type: \code{\link{assert_logical}}.}

\item{exp5k}{logical indicator for regime of pipe (i.e. acceptor's incoming edge): if
\code{TRUE} pipe is operated more that \code{5000} hours per year.
Type: \code{\link{assert_logical}}.}

\item{roughness}{roughness of internal wall of pipe (i.e. acceptor's incoming edge),
[\emph{m}]. Type: \code{\link{assert_logical}}.}

\item{inlet}{elevation of pipe inlet, [\emph{m}]. Type: \code{\link{assert_double}}.}

\item{outlet}{elevation of pipe outlet, [\emph{m}]. Type: \code{\link{assert_double}}.}

\item{method}{method of determining \emph{Darcy friction factor}:
\itemize{
  \item \code{romeo}
  \item \code{vatankhan}
  \item \code{buzelli}
}
Type: \code{\link{assert_choice}}.
For more details see \code{\link{dropp}}.}

\item{opinion}{method for aggregating values of regime parameters on each node for the
next tracing step:
\describe{
   \item{\code{mean}}{values of parameter are averaged before the next
   tracing step}
   \item{\code{median}}{median of parameter values are used for the next
   tracing step}
 }
Type: \code{\link{assert_choice}}.}

\item{verbose}{logical indicator: should they watch tracing process on console?
Type: \code{\link{assert_flag}}.}

\item{csv}{logical indicator: should they incrementally dump results to \emph{csv}-file
while tracing?
Type: \code{\link{assert_flag}}.}

\item{file}{name of \emph{csv}-file which they dump results to.
Type: \code{\link{assert_character}} of length 1 that can be used safely
to create a file and write to it.}
}
\value{
\code{data.frame} containing results of tracing in
   long format
   (\href{https://en.wikipedia.org/wiki/Wide_and_narrow_data}{narrow format})
   like it returned by function \code{\link{m325tracebw}}
}
\description{
Trace values of thermal-hydraulic regime (temperature, pressure,
 consumption) in the bunched pipeline against the flow direction using norms
 of heat flux values prescribed by
 \href{http://docs.cntd.ru/document/902148459}{Minenergo Order 325}.
 In contrast to \code{\link{m325tracebw}} the algorithm suits for
 partially measurable district heating network with massive data lack
 conditions, when there are no temperature and pressure sensor readings on
 the majority of terminal nodes.
}
\details{
They consider the topology of district heating network much similar to
 \code{\link{m325testbench}}:

 \figure{m325tracebwm.png}

 In contrast to \code{\link{m325tracebw}} no more than
 two nodes must be equipped with pressure and temperature sensors whereas
 for other nodes only consumption sensors must be installed. In practice
 the most of consumption sensor readings are surrogate because replaced with
 calculated values.

 For further details of the algorithm see \code{\link{m325tracebw}}.
}
\examples{
# Get isomorphic representation of district heating network graph:
nx <- pipenostics::m325testbench
nx$d <- 1e3*nx$d  # convert [m] to [mm]

# Simulate lack of temperature and pressure sensors
nx[c(7, 10, 21, 24), c("temperature", "pressure")] <- NA_real_

# Trace thermal-hydraulic regime
output <- do.call("m325tracebwm", c(as.list(nx)))
print(output)

}
\seealso{
Other Regime tracing: 
\code{\link{m325tracebw}()},
\code{\link{m325tracefw}()},
\code{\link{m325traceline}()}
}
\concept{Regime tracing}
